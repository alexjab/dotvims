"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM UI
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Sets the number of lines to see above and below the cursor
set scrolloff=10

filetype plugin on
filetype indent on

" Avoid garbled characters in Chinese language windows OS
let $LANG='en' 
set langmenu=en
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim

"Always show current position
set ruler

" Height of the command bar
set cmdheight=1

" Ignore case when searching
set ignorecase
" When searching try to be smart about cases 
set smartcase
" Highlight search results
set hlsearch
" Makes search act like search in modern browsers
set incsearch 

" Don't redraw while executing macros (good performance config)
set lazyredraw 

" For regular expressions turn magic on
set magic

" Show matching brackets when text indicator is over them
set showmatch 

" Don't show mode in the command line -- using Airline for that
set noshowmode

" Sets how many lines of history VIM has to remember
set history=500

" Highlights the current line
set cursorline

" Remove extra margin to the left
set foldcolumn=0

" Enable mouse scrolling
set mouse=a

" Show the line numbers
set number

" Open split on the right and bottom
set splitright
set splitbelow

" Ignore case when autocompleting a path
set wildignorecase

" Folding
set foldmethod=indent
set foldnestmax=1
set foldlevel=0


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM Config
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Sets the swap directory to avoid the current folder
set directory^=$HOME/.vim/swap

" Improve tabnew Tab UX
set wildmode=longest:full,full
set wildmenu

" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
let mapleader = ","

" Improve undo history support; now you can undo even after closing
" and reopening VIM.
set undofile
set undodir=~/.vim/undodir


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Colors and Fonts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Use dracula as color scheme
colorscheme dracula

" Enable syntax highlighting
syntax enable 

" Set utf8 as standard encoding and en_US as the standard language
set encoding=utf8

" Use Unix as the standard file type
set ffs=unix,dos,mac

" Force GUI colors in terminals
set termguicolors

" Code UI tweaks
highlight Comment gui=italic cterm=italic
highlight htmlArg gui=italic cterm=italic
highlight Type gui=italic cterm=italic


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Text, tab and indent related
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Use spaces instead of tabs
set expandtab

" Be smart when using tabs ;)
set smarttab

" 1 tab == 2 spaces
set shiftwidth=2
set tabstop=2

" Linebreak on 500 characters
set lbr
set tw=500

set ai "Auto indent
set si "Smart indent
set wrap "Wrap lines

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugins config
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM Airline
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Unset status line (will be set by vim-airline)
set statusline=

" vim-airline: customizations
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme='dracula'

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Ctrlp
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" ctrlp: use The Silver Searcher instead of find if available
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" ctrlp: open tab when hitting a search result
let g:ctrlp_prompt_mappings = {
  \ 'AcceptSelection("e")': ['<c-t>'],
  \ 'AcceptSelection("t")': ['<cr>', '<2-LeftMouse>'],
  \ }

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM Easyclip
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Enable global clipboard
set clipboard=unnamed
let g:EasyClipAlwaysMoveCursorToEndOfPaste=1
" Disables d => delete
let g:EasyClipEnableBlackHoleRedirect=0
" Disables m => move (restores m => set mark)
let g:EasyClipUseCutDefaults = 0
" Enables _d => cut
nnoremap _d "_d
nnoremap _D "_D
vnoremap _d "_d

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => NERDCommenter
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1
" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1
" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign = 'left'
" Add your own custom formats or override the defaults
let g:NERDCustomDelimiters = {
  \ 'typescript': { 'left': '//', 'leftAlt': '/**', 'rightAlt': '*/' },
  \ 'typescriptreact': { 'left': '//', 'leftAlt': '/**', 'rightAlt': '*/' },
  \}


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => vim-prettier
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Enables <Leader>p for Prettier (it should work out of the box but it does not)
nnoremap <Leader>p :Prettier<CR>


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => ultisnips
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"
" Needed to open snippets edition in the right place.
let g:UltiSnipsSnippetsDir="~/.vim/ultisnips"

" Lets vim copy the file instead of overwriting it
set backupcopy=yes

" Remap accented vowels for marks
nnoremap à 'a
nnoremap è 'e
nnoremap ì 'i
nnoremap ò 'o
nnoremap ù 'u
